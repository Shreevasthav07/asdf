Algorithm Fractional_Knapsack
Input:
    n → number of items
    profit[1...n], weight[1...n]
    capacity → total capacity of knapsack
Output:
    Maximum total profit that can be obtained

Begin
    For i ← 1 to n do
        ratio[i] ← profit[i] / weight[i]
    EndFor

    // Step 1: Sort items by decreasing ratio
    Sort items based on ratio[i] in descending order

    total_profit ← 0
    remaining_capacity ← capacity

    // Step 2: Select items greedily
    For i ← 1 to n do
        If weight[i] ≤ remaining_capacity then
            total_profit ← total_profit + profit[i]
            remaining_capacity ← remaining_capacity - weight[i]
        Else
            fraction ← remaining_capacity / weight[i]
            total_profit ← total_profit + (profit[i] * fraction)
            remaining_capacity ← 0
            Break   // Knapsack is full
        EndIf
    EndFor

    Print "Maximum Profit = ", total_profit
End
